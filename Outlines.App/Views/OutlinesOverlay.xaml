<UserControl x:Class="Outlines.App.Views.OutlinesOverlay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Outlines.App.Views"
             xmlns:vm="clr-namespace:Outlines.App.ViewModels"
             mc:Ignorable="d" 
             Loaded="OnLoaded"
             Background="Transparent"
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="SelectedElementOutlineBrush" Color="#18A0FB" />
            <SolidColorBrush x:Key="TargetElementOutlineBrush" Color="#F24822" />
            <SolidColorBrush x:Key="DistanceOutlineBrush" Color="#F24822" />
            <SolidColorBrush x:Key="AlignmentOutlineBrush" Color="#8600EB" />

            <DoubleCollection x:Key="DashPattern">5,4,5,4</DoubleCollection>

            <Style x:Key="ElementOutlineStyle" TargetType="Rectangle">
                <Setter Property="Stroke" Value="{StaticResource SelectedElementOutlineBrush}" />
                <Setter Property="StrokeThickness" Value="2" />
            </Style>          

            <Style x:Key="DistanceOutlineStyle" TargetType="Line">
                <Setter Property="Stroke" Value="{StaticResource DistanceOutlineBrush}" />
                <Setter Property="StrokeThickness" Value="2" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsAlignmentLine}" Value="True">
                        <Setter Property="Stroke" Value="{StaticResource AlignmentOutlineBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsDashedLine}" Value="True">
                        <Setter Property="StrokeDashArray" Value="{StaticResource DashPattern}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DimensionsTextContainerStyle" TargetType="Border">
                <Setter Property="CornerRadius" Value="3" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,8,0,8"/>
                <!--<Style.Triggers>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DimensionsTextPlacement.Below}">
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Margin" Value="0,8,0,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DimensionsTextPlacement.Above}">
                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                        <Setter Property="Margin" Value="0,0,0,8"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DimensionsTextPlacement.Inside}">
                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                        <Setter Property="Margin" Value="0,0,0,8"/>
                    </DataTrigger>
                </Style.Triggers>-->
            </Style>

            <Style x:Key="DimensionsTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="8,2,8,2" />
            </Style>

            <Style x:Key="DistanceTextContainerStyle" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource DistanceOutlineBrush}" />
                <Setter Property="CornerRadius" Value="3" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="8,8,8,8"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsAlignmentLine}" Value="True">
                        <Setter Property="Background" Value="{StaticResource AlignmentOutlineBrush}"/>
                    </DataTrigger>
                </Style.Triggers>
                <!--<Style.Triggers>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DistanceTextPlacement.Right}">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="8,0,0,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DistanceTextPlacement.Left}">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0,0,8,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DistanceTextPlacement.Bottom}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Margin" Value="0,8,0,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=TextPlacement}" Value="{x:Static vm:DistanceTextPlacement.Top}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                        <Setter Property="Margin" Value="0,0,0,8"/>
                    </DataTrigger>
                </Style.Triggers>-->
            </Style>

            <Style x:Key="DistanceTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="8,2,8,2" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <local:DpiIndependentContainer>
        <Grid Name="Root">
            <ItemsControl ItemsSource="{Binding DistanceOutlines}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Line X1="{Binding StartPoint.X}" Y1="{Binding StartPoint.Y}" X2="{Binding EndPoint.X}" Y2="{Binding EndPoint.Y}" Style="{StaticResource DistanceOutlineStyle}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Canvas>
                <Rectangle x:Name="SelectedElementOutline" 
                    Style="{StaticResource ElementOutlineStyle}"
                    Stroke="{StaticResource SelectedElementOutlineBrush}"
                    Visibility="{Binding IsSelectedElementRectVisible, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}"
                    Canvas.Top="{Binding SelectedElementRect.Top}"
                    Canvas.Left="{Binding SelectedElementRect.Left}"
                    Width="{Binding SelectedElementRect.Width}"
                    Height="{Binding SelectedElementRect.Height}" />

                <Grid
                    Visibility="{Binding IsSelectedElementRectVisible, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}"
                    Canvas.Top="{Binding SelectedElementDimensionsViewModel.ContainerRect.Top}"
                    Canvas.Left="{Binding SelectedElementDimensionsViewModel.ContainerRect.Left}"
                    Width="{Binding SelectedElementDimensionsViewModel.ContainerRect.Width}">
                    <Border Background="{StaticResource SelectedElementOutlineBrush}" Style="{StaticResource DimensionsTextContainerStyle}">
                        <TextBlock Text="{Binding SelectedElementDimensionsViewModel.DimensionsText}" Style="{StaticResource DimensionsTextStyle}" />
                    </Border>
                </Grid>

                <Rectangle x:Name="TargetElementOutline" 
                    Style="{StaticResource ElementOutlineStyle}"
                    Stroke="{StaticResource TargetElementOutlineBrush}"
                    Visibility="{Binding IsTargetElementRectVisible, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}"
                    Canvas.Top="{Binding TargetElementRect.Top}"
                    Canvas.Left="{Binding TargetElementRect.Left}"
                    Width="{Binding TargetElementRect.Width}"
                    Height="{Binding TargetElementRect.Height}" />

                <Grid
                    Visibility="{Binding IsTargetElementRectVisible, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}"
                    Canvas.Top="{Binding TargetElementDimensionsViewModel.ContainerRect.Top}"
                    Canvas.Left="{Binding TargetElementDimensionsViewModel.ContainerRect.Left}"
                    Width="{Binding TargetElementDimensionsViewModel.ContainerRect.Width}">
                    <Border Background="{StaticResource TargetElementOutlineBrush}" Style="{StaticResource DimensionsTextContainerStyle}">
                        <TextBlock Text="{Binding TargetElementDimensionsViewModel.DimensionsText}" Style="{StaticResource DimensionsTextStyle}"  />
                    </Border>
                </Grid>
            </Canvas>

            <ItemsControl ItemsSource="{Binding DistanceOutlines}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Style="{StaticResource DistanceTextContainerStyle}">
                            <TextBlock Text="{Binding DistanceText}" Style="{StaticResource DistanceTextStyle}" />
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Visibility" Value="{Binding IsTextVisible, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}" />
                        <Setter Property="Canvas.Top" Value="{Binding TextContainerRect.Top}" />
                        <Setter Property="Canvas.Left" Value="{Binding TextContainerRect.Left}" />
                        <Setter Property="Width" Value="{Binding TextContainerRect.Width}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Grid>
    </local:DpiIndependentContainer>
</UserControl>
